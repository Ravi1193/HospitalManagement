@model HospitalManagementSystem.Viewmodels.HomeViewModel
@{
    Layout = null;
}

@using (Html.BeginForm("addDoctor", "Home", FormMethod.Post, new { @onsubmit = "return OnFormSubmit(this)" }))
{
    @Html.AntiForgeryToken()

    <div class="modal-content">
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" style="margin-top:-15px" ; onclick="javascript:location.reload()">&times;</button>
            <div class="modal-title">Add Doctor</div>
        </div>
        @*<div class="modal-body" style="height: 500px; overflow-y: scroll;">*@
        <div class="modal-body">
            <div class="container">
                <h5 style="color:red;"><i>All Fieds Are Required</i></h5>
                @if (TempData["addUser"] != null)
                {
                    @*<p id="p1">@TempData["addUser"]</p>*@
                    <div id="P" style="margin-left:300px;">@TempData["addUser"]</div>

                }

                @Html.ValidationSummary(false, "", new { @class = "text-danger" })

                <br />
                <div class="row">
                    <div class="col-sm-1">
                        @Html.LabelFor(x => x.Firstname)
                    </div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.Firstname, new { @class = "form-control" })

                    </div>
                    <div class="col-sm-1">
                        @Html.LabelFor(x => x.Lastname)
                    </div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.Lastname, new { @class = "form-control" })

                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-1">
                        @Html.LabelFor(x => x.Username)
                    </div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.Username, new { @class = "form-control" })
                    </div>
                    <div class="col-sm-1">
                        @Html.LabelFor(x => x.Password)
                    </div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.Password, new { @class = "form-control" })
                    </div>
                </div>
                <br />
                <div class="row">
                    <div class="col-sm-1">
                        @Html.LabelFor(x => x.Email)
                    </div>
                    <div class="col-sm-3">
                        @Html.TextBoxFor(x => x.Email, new { @class = "form-control" })

                    </div>
                    <div class="col-sm-1">
                        @Html.LabelFor(x => x.AcocuntType)
                    </div>
                    <div class="col-sm-3">
                        @Html.DropDownListFor(x => x.AcocuntType, ViewBag.AccountType as SelectList, new { @class = "form-control" })

                    </div>
                </div>
                <br />
                <div class="row">
                    <button type="submit" value="submit" class="btn btn-primary" id="save">Save</button>
                    <button type="reset" value="reset" class="btn btn-danger">Reset</button>
                </div>
            </div>
        </div>
    </div>
}

<script>
    $("#P").fadeOut(4000);

    function OnFormSubmit(frm) {
       var res = ' @TempData["message"]';
       SubmitForm(frm,res);
       return false;
    }
</script>